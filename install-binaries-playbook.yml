- name: Install binaries and setup Debian 12
  hosts: localhost
  vars:
    user_programs: /usr/local/bin
    marksman_version: "2024-12-18"
    marksman_shasum: "b9cb666c643dfd9b699811fdfc445ed4c56be65c1d878c21d46847f0d7b0e475"
    ltex_ls_plus_version: "18.4.0"
    lazygit_version: "0.45.0"
    yabridge_version: "5.0.5"

  tasks:
    - name: Download and install GitHub binaries
      become: true
      block:
        - name: Download and install marksman
          ansible.builtin.get_url:
            url: "https://github.com/artempyanykh/marksman/releases/download/{{ marksman_version }}/marksman-linux-x64"
            dest: "{{ user_programs }}/marksman"
            mode: "0755"
            checksum: "sha256:{{ marksman_shasum }}"

        - name: Download and install ltex-ls-plus, depends on Java 21 or higher
          ansible.builtin.unarchive:
            src: "https://github.com/ltex-plus/ltex-ls-plus/releases/download/{{ ltex_ls_plus_version }}/ltex-ls-plus-{{ ltex_ls_plus_version }}.tar.gz"
            dest: "{{ user_programs }}"
            remote_src: true
            extra_opts:
              - "--strip-components=1"
              - "ltex-ls-plus-{{ ltex_ls_plus_version }}/bin"
              - "ltex-ls-plus-{{ ltex_ls_plus_version }}/lib"
            creates: "{{ user_programs }}/bin/ltex-ls-plus"

        - name: Create symlink to ltex-ls-plus binary
          ansible.builtin.file:
            src: "{{ user_programs }}/bin/ltex-ls-plus"
            dest: "{{ user_programs }}/ltex-ls-plus"
            state: link

        - name: Download and install lazygit
          ansible.builtin.unarchive:
            src: "https://github.com/jesseduffield/lazygit/releases/download/v{{ lazygit_version }}/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"
            dest: "{{ user_programs }}"
            remote_src: true
            include: "lazygit"
            creates: "{{ user_programs }}/lazygit"

        - name: Download and install yabridge
          ansible.builtin.unarchive:
            src: "https://github.com/robbert-vdh/yabridge/releases/download/{{ yabridge_version }}/yabridge-{{ yabridge_version }}.tar.gz"
            dest: "{{ ansible_facts['user_dir'] }}/.local/share"
            remote_src: true
            creates: "{{ ansible_facts['user_dir'] }}/.local/share/yabridge/yabridgectl"

    # A single shell session is required for the installations to ensure the Rust environment
    # variables are correctly sourced and recognized by subsequent installations.
    # The `set -o pipefail` option ensures the task fails if any command in the pipeline fails
    # The use of "/bin/bash" as the executable is specified to guarantee compatibility with `pipefail`.
    # The default shell on some systems on Debian is `dash`, which does not support such options.
    # The `.cargo/env` file, created by the Rust installation script, acts as a marker indicating
    # Rust is installed. If this file exists, Ansible skips this task, ensuring idempotency and
    # avoiding unnecessary reinstallation.
    - name: Install the latest stable Rust, Rust-analyzer, and AIChat
      ansible.builtin.shell: >
        set -o pipefail &&
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&
        . "{{ ansible_facts['user_dir'] }}/.cargo/env" &&
        rustup component add rust-analyzer &&
        cargo install aichat &&
      args:
        creates: "{{ ansible_facts['user_dir'] }}/.cargo/env"
        executable: /bin/bash

    # Blender will be coming to Trixie, not here in Dec 24
