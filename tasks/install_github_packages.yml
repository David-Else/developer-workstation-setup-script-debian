- name: Debian 12 specific tasks
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "12"
  block:
    - name: Install delta
      ansible.builtin.apt:
        deb: https://github.com/dandavison/delta/releases/download/{{ delta_version }}/git-delta_{{ delta_version }}_amd64.deb

    - name: Install keyd from source
      block:
        - name: Clone keyd from GitHub
          ansible.builtin.git:
            repo: https://github.com/rvaiya/keyd
            dest: "/tmp/keyd"
            version: "{{ keyd_git_version }}"
            update: false

        - name: Ensure the keyd directory exists
          ansible.builtin.file:
            path: /etc/keyd/
            state: directory

        - name: Build keyd
          community.general.make:
            chdir: /tmp/keyd

        - name: Install keyd
          community.general.make:
            chdir: /tmp/keyd
            target: install

        - name: Enable and start keyd service
          ansible.builtin.systemd:
            name: keyd
            enabled: true
            state: started

        - name: Clean up temporary directory
          ansible.builtin.file:
            path: "/tmp/keyd"
            state: absent

- name: Create default.conf for keyd
  ansible.builtin.copy:
    content: |
      [ids]
      *

      [main]
      # Maps capslock to escape when pressed and control when held.
      capslock = overload(control, esc)
    dest: /etc/keyd/default.conf

- name: Install ltex-ls-plus with JDK
  block:
    - name: Create versioned installation directory
      ansible.builtin.file:
        path: "{{ bin_install_dir }}/ltex-ls-plus-{{ ltex_ls_plus_version }}"
        state: directory

    - name: Extract ltex-ls-plus
      ansible.builtin.unarchive:
        src: "https://github.com/ltex-plus/ltex-ls-plus/releases/download/{{ ltex_ls_plus_version }}/ltex-ls-plus-{{ ltex_ls_plus_version }}-linux-x64.tar.gz"
        dest: "{{ bin_install_dir }}/ltex-ls-plus-{{ ltex_ls_plus_version }}"
        remote_src: true
        extra_opts:
          - "--strip-components=2" # removes /./ltex-ls-plus-18.4.0/
          - "--wildcards"
          - "*/bin/*" # */ is needed to deal with strange /./ structure
          - "*/lib/*"
          - "*/jdk-*/*"
        creates: "{{ bin_install_dir }}/ltex-ls-plus-{{ ltex_ls_plus_version }}/bin/ltex-ls-plus"

    - name: Create symbolic links to versioned binary
      ansible.builtin.file:
        src: "{{ bin_install_dir }}/ltex-ls-plus-{{ ltex_ls_plus_version }}/bin/ltex-ls-plus"
        dest: "{{ bin_install_dir }}/ltex-ls-plus"
        state: link
        force: true

- name: Install binary executables
  block:
    - name: Install marksman
      ansible.builtin.get_url:
        url: "https://github.com/artempyanykh/marksman/releases/download/{{ marksman_version }}/marksman-linux-x64"
        dest: "{{ bin_install_dir }}/marksman"
        checksum: "sha256:{{ marksman_shasum }}"

    - name: Install lazygit
      ansible.builtin.unarchive:
        src: "https://github.com/jesseduffield/lazygit/releases/download/v{{ lazygit_version }}/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"
        dest: "{{ bin_install_dir }}"
        remote_src: true
        include: "lazygit"

- name: Install third-party packages from GitHub releases
  block:
    - name: Install .deb packages
      ansible.builtin.apt:
        deb: "{{ item.url }}"
      loop:
        - name: rclone
          url: "https://github.com/rclone/rclone/releases/download/v{{ rclone_version }}/rclone-v{{ rclone_version }}-linux-amd64.deb"
        - name: hugo
          url: "https://github.com/gohugoio/hugo/releases/download/v{{ hugo_version }}/hugo_extended_{{ hugo_version }}_linux-amd64.deb"
        - name: helix
          url: "https://github.com/helix-editor/helix/releases/download/{{ helix_version }}/helix_25.1.1-1_amd64.deb"
        - name: ALSA scarlett control panel
          url: "https://github.com/geoffreybennett/alsa-scarlett-gui/releases/download/0.5.0/alsa-scarlett-gui_0.5.0_amd64.deb"
